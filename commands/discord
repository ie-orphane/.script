#!/bin/bash

. ~/.script/utils/*

CMD=discord
SRC=~/.script/src/$CMD
TMP=~/.script/template/$CMD

new () {
    # check new folder
    if [[ "$#" > 1 ]]; then
        # check folder if exists
        if [[ -e $2 ]]; then
            echo "$(Red [Error]) $(White $2) already exists!"
            return
        fi
        
        mkdir $2
        cd $2
        echo "$(Blue [Info]) $(White $2) created!"
    fi
    
    # folder structre
    cp -r $TMP/* ./
    cp $SRC/.gitignore ./.gitignore
    cp $SRC/.env.example ./.env.example
    cp $SRC/.env.example ./.env
    echo "# $(basename $(PWD))" > ./README.md
    
    # virtual environment
    python3 -m venv .venv
    source ./.venv/Scripts/activate
    echo "$(Green [Info]) $(White virtual environment) created!"
    
    # packages
    echo "$(Blue [Info]) installing packages from $(White requirements.txt)"
    pip install -r requirements.txt
}

add() {
    case "$1" in
        #  -c|--cog
        -c|--cog)
            if [[ ! -d ./cogs ]]; then
                echo "$(Red [error]) folder $(White cogs) not found"
                exit
            fi
            
            if [[ ! "$2" ]]; then
                echo -e "$(Red [error]) $(White $CMD $1) command missed option"
                exit
            fi
            
            sed "s/_Name_/\u${2,,}/g; s/_name_/${2,,}/g" $SRC/__cog__.py > ./cogs/__${2,,}__.py
            echo "$(Green [Info]) $(White ./cogs/__${2,,}__.py) created!"
        ;;
        #  -m|--model
        -m|--model)
            if [[ ! -d ./models ]]; then
                echo "$(Red [error]) folder $(White models) not found"
                exit
            fi
            
            if [[ ! "$2" ]]; then
                echo -e "$(Red [Error]) $(White $CMD $1) command missed option"
                exit
            fi
            
            mkdir -p  ./data/${2,,}
            sed "s/_Name_/\u${2,,}/g; s/_name_/${2,,}/g" $SRC/__model__.py > ./models/__${2,,}__.py
            echo "$(Green [Info]) $(White ./models/__${2,,}__.py) created!"
        ;;
        #  -t|--task
        -t|--task)
            echo task
        ;;
        # -d|--data
        -d|--data)
            if [[ -d ./data || -d ./models || -f ./db.schema ]]; then
                echo "$(Red [Error]) $(White data) already initiliased"
                exit
            fi
            
            mkdir ./{data,models}
            touch $_/__init__.py
            cp $SRC/__schema__.py ./models/__schema__.py
            cp $SRC/db.schema ./db.schema
        ;;
        *)
            echo "$(Red [Error]) Unknown option $(White $1)"
        ;;
    esac
}

run() {
    if [[ ! -f "./$1.py" ]]; then
        echo "$(Red [Error]) No such file $(White $1).py"
        exit
    fi
    python3 "./$1.py"
}

if [ "$#" -eq 0 ]; then
    echo -e "$(Red [error]) $(White $CMD) command missed option\n$(Yellow [indice]) Try:"
    cat $SRC/README.md
else
    case "$1" in
        # discord new
        #     create new discord.py project
        new) new $@ ;;
        # discord run
        #     run the bot
        run) run bot ;;
        test) run test ;;
        # discord install
        #     install a dependency and add it to requirements.txt
        install)
            shift
            pip install $@
            pip freeze > ./requirements.txt
        ;;
        # discord init
        #     copy the .env.example to .env if not existed
        init)
            if [[ ! -e ./.env ]]; then
                cp $SRC/.env.example ./.env
            else
                echo "$(Red [Error] $(White .env) already exists.)"
            fi
        ;;
        # discord
        #       -c --cog
        #       -t --task
        #       -m --model
        #       -d --data
        -c|--cog|-t|--task|-m|--model|-d|--data)
            add $@
        ;;
        
        *)
            echo "$(Red [Error]) Unknown option $(White $1)"
        ;;
    esac
    
fi

function stage {
    if [[ $# -eq 0 ]]; then
        echo "[Error] Missing commit message !"
        return 1
    fi

    if [[ $1 == "-a" ]]; then
        git add .
        shift
    else
        git add -- . ':!bot'
    fi

    if [[ $? -eq 0 ]]; then
        git commit -m $1
    fi
}
